name: sbuild

on:
  workflow_dispatch:
  push:

jobs:
  sbuild:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        ros_distro: [humble]
    env:
      ubuntu_distro: jammy
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Cache ccache
        uses: pat-s/always-upload-cache@v3
        with:
          path: /home/runner/.cache/ccache
          key: ccache-${{ matrix.ros_distro }}-${{ github.sha }}-${{ github.run_id }}
          restore-keys: |
            ccache-${{ matrix.ros_distro }}-${{ github.sha }}
            ccache-${{ matrix.ros_distro }}

      - name: Install dependencies
        run: |
          sudo add-apt-repository ppa:v-launchpad-jochen-sprickerhof-de/sbuild
          sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key \
            -o /usr/share/keyrings/ros-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo "$UBUNTU_CODENAME") main" \
            | sudo tee /etc/apt/sources.list.d/ros2.list
          sudo apt update
          sudo apt install -y sbuild mmdebstrap python3-colcon-common-extensions python3-bloom python3-rosdep python3-vcstool ccache

      - name: Setup build environment
        run: |
          mkdir -p ~/.cache/sbuild
          mmdebstrap --variant=buildd --include=apt,ccache \
            --customize-hook='chroot "$1" update-ccache-symlinks' \
            --components=main,universe ${{ env.ubuntu_distro }} ~/.cache/sbuild/${{ env.ubuntu_distro }}-amd64.tar

          ccache --zero-stats --max-size=10.0G
          chmod a+rwX ~
          chmod -R a+rwX ~/.cache/ccache

          cat << "EOF" > ~/.sbuildrc
          $build_environment = { 'CCACHE_DIR' => '/build/ccache' };
          $path = '/usr/lib/ccache:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games';
          $build_path = "/build/package/";
          $dsc_dir = "package";
          $unshare_bind_mounts = [ { directory => '/home/runner/.cache/ccache', mountpoint => '/build/ccache' } ];
          EOF

          # make output directory
          mkdir /home/runner/apt_repo

      - name: Checkout workspace
        run: |
          mkdir src
          vcs import src < upstream.repos

      - name: Add unreleased packages to rosdep
        run: |
          echo "{distributions: {${{ matrix.ros_distro }}: {distribution: [https://raw.githubusercontent.com/ros/rosdistro/master/${{ matrix.ros_distro }}/distribution.yaml, local.yaml]}}, type: index, version: 4}" > index-v4.yaml
          echo -e "release_platforms: {ubuntu: [${{ env.ubuntu_distro }}]}\ntype: distribution\nversion: 2\nrepositories:" > local.yaml
          for PKG in $(colcon list -n); do
            echo "  $PKG: {release: {tags: {release: None}, url: None}}" >> local.yaml
          done

          sudo rosdep init
          ROSDISTRO_INDEX_URL="file://$(pwd)/index-v4.yaml" rosdep update

      - name: Run sbuild
        run: |
          # Don't build tests
          export DEB_BUILD_OPTIONS=nocheck

          TOTAL="$(colcon list | wc -l)"
          COUNT=1

          for PKG_PATH in $(colcon list -tp); do
            [ $TOTAL -ne 1 ] && echo "::group::Building $COUNT/$TOTAL: $PKG_PATH"
            (
            cd "$PKG_PATH"
            bloom-generate rosdebian --os-name=ubuntu --os-version=${{ env.ubuntu_distro }} --ros-distro=${{ matrix.ros_distro }}

            # Set the version
            sed -i "1 s/([^)]*)/($(git describe --tag)-$(date +%Y.%m.%d.%H.%M))/" debian/changelog

            # https://github.com/ros-infrastructure/bloom/pull/643
            echo 11 > debian/compat

            # dpkg-source-opts: no need for upstream.tar.gz
            sbuild --chroot-mode=unshare --no-clean-source --no-run-lintian \
              --dpkg-source-opts="-Zgzip -z1 --format=1.0 -sn" \
              --build-dir=/home/runner/apt_repo --extra-package=/home/runner/apt_repo \
              --extra-repository="deb http://packages.ros.org/ros2/ubuntu ${{ env.ubuntu_distro }} main" \
              --extra-repository-key=/usr/share/keyrings/ros-archive-keyring.gpg
            )
            sudo chown -R runner:docker ~/.cache/ccache/
            chmod -R a+rwX ~/.cache/ccache
            ccache -sv
            COUNT=$((COUNT+1))
            [ $TOTAL -ne 1 ] && echo "::endgroup::" || true
          done

      - name: Display ccache stats
        run: ccache -sv

      - name: Create apt repository
        run: |
          vcs export src --exact-with-tags > /home/runner/apt_repo/upstream.repos
          cd /home/runner/apt_repo
          apt-ftparchive packages . > Packages
          apt-ftparchive release . > Release
          echo "deb [trusted=yes] https://raw.githubusercontent.com/$GITHUB_REPOSITORY/${{ env.ubuntu_distro }}-${{ matrix.ros_distro }}/ ./" > README.md

      - name: Deploy
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          BRANCH: ${{ env.ubuntu_distro }}-${{ matrix.ros_distro }}
          FOLDER: /home/runner/apt_repo
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
